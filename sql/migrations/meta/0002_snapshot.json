{
  "id": "00232a8d-024b-475c-8fee-e9fa658b2fca",
  "prevId": "75be2035-2240-4b86-95e3-541f640f3ec3",
  "version": "7",
  "dialect": "postgresql",
  "tables": {
    "public.bookmark": {
      "name": "bookmark",
      "schema": "",
      "columns": {
        "bookmark_id": {
          "name": "bookmark_id",
          "type": "bigint",
          "primaryKey": true,
          "notNull": true,
          "identity": {
            "type": "always",
            "name": "bookmark_bookmark_id_seq",
            "schema": "public",
            "increment": "1",
            "startWith": "1",
            "minValue": "1",
            "maxValue": "9223372036854775807",
            "cache": "1",
            "cycle": false
          }
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "category_id": {
          "name": "category_id",
          "type": "bigint",
          "primaryKey": false,
          "notNull": false
        },
        "title": {
          "name": "title",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": false
        },
        "url": {
          "name": "url",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "thumbnail_url": {
          "name": "thumbnail_url",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "is_favorite": {
          "name": "is_favorite",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "bookmark_user_id_users_id_fk": {
          "name": "bookmark_user_id_users_id_fk",
          "tableFrom": "bookmark",
          "tableTo": "users",
          "schemaTo": "auth",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "bookmark_category_id_category_category_id_fk": {
          "name": "bookmark_category_id_category_category_id_fk",
          "tableFrom": "bookmark",
          "tableTo": "category",
          "columnsFrom": [
            "category_id"
          ],
          "columnsTo": [
            "category_id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "create-bookmark-policy": {
          "name": "create-bookmark-policy",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "authenticated"
          ],
          "withCheck": "(select auth.uid()) = \"bookmark\".\"user_id\""
        },
        "edit-bookmark-policy": {
          "name": "edit-bookmark-policy",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "authenticated"
          ],
          "using": "(select auth.uid()) = \"bookmark\".\"user_id\"",
          "withCheck": "(select auth.uid()) = \"bookmark\".\"user_id\""
        },
        "delete-bookmark-policy": {
          "name": "delete-bookmark-policy",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": [
            "authenticated"
          ],
          "using": "(select auth.uid()) = \"bookmark\".\"user_id\""
        },
        "read-bookmark-policy": {
          "name": "read-bookmark-policy",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "(select auth.uid()) = \"bookmark\".\"user_id\""
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.memo": {
      "name": "memo",
      "schema": "",
      "columns": {
        "memo_id": {
          "name": "memo_id",
          "type": "bigint",
          "primaryKey": true,
          "notNull": true,
          "identity": {
            "type": "always",
            "name": "memo_memo_id_seq",
            "schema": "public",
            "increment": "1",
            "startWith": "1",
            "minValue": "1",
            "maxValue": "9223372036854775807",
            "cache": "1",
            "cycle": false
          }
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "content_type_id": {
          "name": "content_type_id",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "target_id": {
          "name": "target_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "summary": {
          "name": "summary",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "content": {
          "name": "content",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "position": {
          "name": "position",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "is_pinned": {
          "name": "is_pinned",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        }
      },
      "indexes": {},
      "foreignKeys": {
        "memo_user_id_users_id_fk": {
          "name": "memo_user_id_users_id_fk",
          "tableFrom": "memo",
          "tableTo": "users",
          "schemaTo": "auth",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "memo_content_type_id_content_type_content_type_id_fk": {
          "name": "memo_content_type_id_content_type_content_type_id_fk",
          "tableFrom": "memo",
          "tableTo": "content_type",
          "columnsFrom": [
            "content_type_id"
          ],
          "columnsTo": [
            "content_type_id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "create-memo-policy": {
          "name": "create-memo-policy",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "authenticated"
          ],
          "withCheck": "(select auth.uid()) = \"memo\".\"user_id\""
        },
        "edit-memo-policy": {
          "name": "edit-memo-policy",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "authenticated"
          ],
          "using": "(select auth.uid()) = \"memo\".\"user_id\"",
          "withCheck": "(select auth.uid()) = \"memo\".\"user_id\""
        },
        "delete-memo-policy": {
          "name": "delete-memo-policy",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": [
            "authenticated"
          ],
          "using": "(select auth.uid()) = \"memo\".\"user_id\""
        },
        "read-memo-policy": {
          "name": "read-memo-policy",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "(select auth.uid()) = \"memo\".\"user_id\""
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.payments": {
      "name": "payments",
      "schema": "",
      "columns": {
        "payment_id": {
          "name": "payment_id",
          "type": "bigint",
          "primaryKey": true,
          "notNull": true,
          "identity": {
            "type": "always",
            "name": "payments_payment_id_seq",
            "schema": "public",
            "increment": "1",
            "startWith": "1",
            "minValue": "1",
            "maxValue": "9223372036854775807",
            "cache": "1",
            "cycle": false
          }
        },
        "payment_key": {
          "name": "payment_key",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "order_id": {
          "name": "order_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "order_name": {
          "name": "order_name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "total_amount": {
          "name": "total_amount",
          "type": "double precision",
          "primaryKey": false,
          "notNull": true
        },
        "metadata": {
          "name": "metadata",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": true
        },
        "raw_data": {
          "name": "raw_data",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": true
        },
        "receipt_url": {
          "name": "receipt_url",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "status": {
          "name": "status",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "approved_at": {
          "name": "approved_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "requested_at": {
          "name": "requested_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "payments_user_id_users_id_fk": {
          "name": "payments_user_id_users_id_fk",
          "tableFrom": "payments",
          "tableTo": "users",
          "schemaTo": "auth",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "select-payment-policy": {
          "name": "select-payment-policy",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "(select auth.uid()) = \"payments\".\"user_id\""
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.category": {
      "name": "category",
      "schema": "",
      "columns": {
        "category_id": {
          "name": "category_id",
          "type": "bigint",
          "primaryKey": true,
          "notNull": true,
          "identity": {
            "type": "always",
            "name": "category_category_id_seq",
            "schema": "public",
            "increment": "1",
            "startWith": "1",
            "minValue": "1",
            "maxValue": "9223372036854775807",
            "cache": "1",
            "cycle": false
          }
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "content_type_id": {
          "name": "content_type_id",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "category_name": {
          "name": "category_name",
          "type": "varchar(100)",
          "primaryKey": false,
          "notNull": true
        },
        "level": {
          "name": "level",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "parent_category_id": {
          "name": "parent_category_id",
          "type": "bigint",
          "primaryKey": false,
          "notNull": false
        },
        "sort_order": {
          "name": "sort_order",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "is_default": {
          "name": "is_default",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "category_user_id_users_id_fk": {
          "name": "category_user_id_users_id_fk",
          "tableFrom": "category",
          "tableTo": "users",
          "schemaTo": "auth",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "category_content_type_id_content_type_content_type_id_fk": {
          "name": "category_content_type_id_content_type_content_type_id_fk",
          "tableFrom": "category",
          "tableTo": "content_type",
          "columnsFrom": [
            "content_type_id"
          ],
          "columnsTo": [
            "content_type_id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "create-category-policy-user": {
          "name": "create-category-policy-user",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "authenticated"
          ],
          "withCheck": "(select auth.uid()) = \"category\".\"user_id\""
        },
        "create-category-policy-admin": {
          "name": "create-category-policy-admin",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "service_role"
          ]
        },
        "edit-category-policy": {
          "name": "edit-category-policy",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "authenticated"
          ],
          "using": "(select auth.uid()) = \"category\".\"user_id\"",
          "withCheck": "(select auth.uid()) = \"category\".\"user_id\""
        },
        "delete-category-policy": {
          "name": "delete-category-policy",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": [
            "authenticated"
          ],
          "using": "(select auth.uid()) = \"category\".\"user_id\""
        },
        "read-category-policy": {
          "name": "read-category-policy",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "(select auth.uid()) = \"category\".\"user_id\""
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.content_type": {
      "name": "content_type",
      "schema": "",
      "columns": {
        "content_type_id": {
          "name": "content_type_id",
          "type": "integer",
          "primaryKey": true,
          "notNull": true,
          "identity": {
            "type": "always",
            "name": "content_type_content_type_id_seq",
            "schema": "public",
            "increment": "1",
            "startWith": "1",
            "minValue": "1",
            "maxValue": "2147483647",
            "cache": "1",
            "cycle": false
          }
        },
        "content_type_code": {
          "name": "content_type_code",
          "type": "content_type_codes",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "content_type_name": {
          "name": "content_type_name",
          "type": "varchar(100)",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updatedAt": {
          "name": "updatedAt",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "create-content-type-policy": {
          "name": "create-content-type-policy",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "service_role"
          ]
        },
        "edit-content-type-policy": {
          "name": "edit-content-type-policy",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "service_role"
          ]
        },
        "delete-content-type-policy": {
          "name": "delete-content-type-policy",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": [
            "service_role"
          ]
        },
        "read-content-type-policy": {
          "name": "read-content-type-policy",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ]
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.ui_type": {
      "name": "ui_type",
      "schema": "",
      "columns": {
        "ui_type_id": {
          "name": "ui_type_id",
          "type": "integer",
          "primaryKey": true,
          "notNull": true,
          "identity": {
            "type": "always",
            "name": "ui_type_ui_type_id_seq",
            "schema": "public",
            "increment": "1",
            "startWith": "1",
            "minValue": "1",
            "maxValue": "2147483647",
            "cache": "1",
            "cycle": false
          }
        },
        "ui_type_code": {
          "name": "ui_type_code",
          "type": "ui_type_codes",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "ui_type_name": {
          "name": "ui_type_name",
          "type": "varchar(100)",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updatedAt": {
          "name": "updatedAt",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "ui_type_unique_index": {
          "name": "ui_type_unique_index",
          "columns": [
            {
              "expression": "ui_type_code",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "create-content-type-policy": {
          "name": "create-content-type-policy",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "service_role"
          ]
        },
        "edit-content-type-policy": {
          "name": "edit-content-type-policy",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "service_role"
          ]
        },
        "delete-content-type-policy": {
          "name": "delete-content-type-policy",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": [
            "service_role"
          ]
        },
        "read-content-type-policy": {
          "name": "read-content-type-policy",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ]
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.ui_view": {
      "name": "ui_view",
      "schema": "",
      "columns": {
        "ui_view_id": {
          "name": "ui_view_id",
          "type": "bigint",
          "primaryKey": true,
          "notNull": true,
          "identity": {
            "type": "always",
            "name": "ui_view_ui_view_id_seq",
            "schema": "public",
            "increment": "1",
            "startWith": "1",
            "minValue": "1",
            "maxValue": "9223372036854775807",
            "cache": "1",
            "cycle": false
          }
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "ui_type_id": {
          "name": "ui_type_id",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "content_type_id": {
          "name": "content_type_id",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "category_id": {
          "name": "category_id",
          "type": "bigint",
          "primaryKey": false,
          "notNull": false
        },
        "sort_order": {
          "name": "sort_order",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "name": {
          "name": "name",
          "type": "varchar(100)",
          "primaryKey": false,
          "notNull": true
        },
        "is_active": {
          "name": "is_active",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "ui_view_user_id_users_id_fk": {
          "name": "ui_view_user_id_users_id_fk",
          "tableFrom": "ui_view",
          "tableTo": "users",
          "schemaTo": "auth",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "ui_view_ui_type_id_ui_type_ui_type_id_fk": {
          "name": "ui_view_ui_type_id_ui_type_ui_type_id_fk",
          "tableFrom": "ui_view",
          "tableTo": "ui_type",
          "columnsFrom": [
            "ui_type_id"
          ],
          "columnsTo": [
            "ui_type_id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "ui_view_content_type_id_content_type_content_type_id_fk": {
          "name": "ui_view_content_type_id_content_type_content_type_id_fk",
          "tableFrom": "ui_view",
          "tableTo": "content_type",
          "columnsFrom": [
            "content_type_id"
          ],
          "columnsTo": [
            "content_type_id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "ui_view_category_id_category_category_id_fk": {
          "name": "ui_view_category_id_category_category_id_fk",
          "tableFrom": "ui_view",
          "tableTo": "category",
          "columnsFrom": [
            "category_id"
          ],
          "columnsTo": [
            "category_id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "create-ui-view-policy": {
          "name": "create-ui-view-policy",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "authenticated"
          ]
        },
        "edit-ui-view-policy": {
          "name": "edit-ui-view-policy",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "authenticated"
          ],
          "using": "(select auth.uid()) = \"ui_view\".\"user_id\"",
          "withCheck": "(select auth.uid()) = \"ui_view\".\"user_id\""
        },
        "delete-ui-view-policy": {
          "name": "delete-ui-view-policy",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": [
            "authenticated"
          ],
          "using": "(select auth.uid()) = \"ui_view\".\"user_id\""
        },
        "read-ui-view-policy": {
          "name": "read-ui-view-policy",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "(select auth.uid()) = \"ui_view\".\"user_id\""
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.ui_view_content": {
      "name": "ui_view_content",
      "schema": "",
      "columns": {
        "ui_view_id": {
          "name": "ui_view_id",
          "type": "bigint",
          "primaryKey": false,
          "notNull": false
        },
        "target_id": {
          "name": "target_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {
        "ui_view_content_ui_view_id_ui_view_ui_view_id_fk": {
          "name": "ui_view_content_ui_view_id_ui_view_ui_view_id_fk",
          "tableFrom": "ui_view_content",
          "tableTo": "ui_view",
          "columnsFrom": [
            "ui_view_id"
          ],
          "columnsTo": [
            "ui_view_id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {
        "ui_view_content_ui_view_id_target_id_pk": {
          "name": "ui_view_content_ui_view_id_target_id_pk",
          "columns": [
            "ui_view_id",
            "target_id"
          ]
        }
      },
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.user_activity": {
      "name": "user_activity",
      "schema": "",
      "columns": {
        "user_activity_id": {
          "name": "user_activity_id",
          "type": "bigint",
          "primaryKey": true,
          "notNull": true,
          "identity": {
            "type": "always",
            "name": "user_activity_user_activity_id_seq",
            "schema": "public",
            "increment": "1",
            "startWith": "1",
            "minValue": "1",
            "maxValue": "9223372036854775807",
            "cache": "1",
            "cycle": false
          }
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "content_type_id": {
          "name": "content_type_id",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "target_id": {
          "name": "target_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "activity_type": {
          "name": "activity_type",
          "type": "activity_type_codes",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "value": {
          "name": "value",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "metadata": {
          "name": "metadata",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "last_at": {
          "name": "last_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "user_activity_unique_index": {
          "name": "user_activity_unique_index",
          "columns": [
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "content_type_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "target_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "activity_type",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "user_activity_user_id_users_id_fk": {
          "name": "user_activity_user_id_users_id_fk",
          "tableFrom": "user_activity",
          "tableTo": "users",
          "schemaTo": "auth",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "user_activity_content_type_id_content_type_content_type_id_fk": {
          "name": "user_activity_content_type_id_content_type_content_type_id_fk",
          "tableFrom": "user_activity",
          "tableTo": "content_type",
          "columnsFrom": [
            "content_type_id"
          ],
          "columnsTo": [
            "content_type_id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "create-user-activity-policy": {
          "name": "create-user-activity-policy",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "authenticated"
          ],
          "withCheck": "(select auth.uid()) = \"user_activity\".\"user_id\""
        },
        "edit-user-activity-policy": {
          "name": "edit-user-activity-policy",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "authenticated"
          ],
          "using": "(select auth.uid()) = \"user_activity\".\"user_id\"",
          "withCheck": "(select auth.uid()) = \"user_activity\".\"user_id\""
        },
        "delete-user-activity-policy-user": {
          "name": "delete-user-activity-policy-user",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": [
            "authenticated"
          ],
          "using": "(select auth.uid()) = \"user_activity\".\"user_id\""
        },
        "delete-user-activity-policy-admin": {
          "name": "delete-user-activity-policy-admin",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": [
            "service_role"
          ]
        },
        "read-user-activity-policy": {
          "name": "read-user-activity-policy",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "(select auth.uid()) = \"user_activity\".\"user_id\""
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.tag": {
      "name": "tag",
      "schema": "",
      "columns": {
        "tag_id": {
          "name": "tag_id",
          "type": "bigint",
          "primaryKey": true,
          "notNull": true,
          "identity": {
            "type": "always",
            "name": "tag_tag_id_seq",
            "schema": "public",
            "increment": "1",
            "startWith": "1",
            "minValue": "1",
            "maxValue": "9223372036854775807",
            "cache": "1",
            "cycle": false
          }
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "tag_name": {
          "name": "tag_name",
          "type": "varchar(100)",
          "primaryKey": false,
          "notNull": true
        },
        "usage_count": {
          "name": "usage_count",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "user_tag_unique": {
          "name": "user_tag_unique",
          "columns": [
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "tag_name",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "tag_user_id_users_id_fk": {
          "name": "tag_user_id_users_id_fk",
          "tableFrom": "tag",
          "tableTo": "users",
          "schemaTo": "auth",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "create-tag-policy": {
          "name": "create-tag-policy",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "authenticated"
          ],
          "withCheck": "(select auth.uid()) = \"tag\".\"user_id\""
        },
        "edit-tag-policy": {
          "name": "edit-tag-policy",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "authenticated"
          ],
          "using": "(select auth.uid()) = \"tag\".\"user_id\"",
          "withCheck": "(select auth.uid()) = \"tag\".\"user_id\""
        },
        "delete-tag-policy": {
          "name": "delete-tag-policy",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": [
            "authenticated"
          ],
          "using": "(select auth.uid()) = \"tag\".\"user_id\""
        },
        "read-tag-policy": {
          "name": "read-tag-policy",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "(select auth.uid()) = \"tag\".\"user_id\""
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.taggable": {
      "name": "taggable",
      "schema": "",
      "columns": {
        "tag_id": {
          "name": "tag_id",
          "type": "bigint",
          "primaryKey": false,
          "notNull": false
        },
        "content_type_id": {
          "name": "content_type_id",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "target_id": {
          "name": "target_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {
        "taggable_tag_id_tag_tag_id_fk": {
          "name": "taggable_tag_id_tag_tag_id_fk",
          "tableFrom": "taggable",
          "tableTo": "tag",
          "columnsFrom": [
            "tag_id"
          ],
          "columnsTo": [
            "tag_id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "taggable_content_type_id_content_type_content_type_id_fk": {
          "name": "taggable_content_type_id_content_type_content_type_id_fk",
          "tableFrom": "taggable",
          "tableTo": "content_type",
          "columnsFrom": [
            "content_type_id"
          ],
          "columnsTo": [
            "content_type_id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {
        "taggable_tag_id_content_type_id_target_id_pk": {
          "name": "taggable_tag_id_content_type_id_target_id_pk",
          "columns": [
            "tag_id",
            "content_type_id",
            "target_id"
          ]
        }
      },
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.profiles": {
      "name": "profiles",
      "schema": "",
      "columns": {
        "profile_id": {
          "name": "profile_id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "avatar_url": {
          "name": "avatar_url",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "marketing_consent": {
          "name": "marketing_consent",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "profiles_profile_id_users_id_fk": {
          "name": "profiles_profile_id_users_id_fk",
          "tableFrom": "profiles",
          "tableTo": "users",
          "schemaTo": "auth",
          "columnsFrom": [
            "profile_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "edit-profile-policy": {
          "name": "edit-profile-policy",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "authenticated"
          ],
          "using": "(select auth.uid()) = \"profiles\".\"profile_id\"",
          "withCheck": "(select auth.uid()) = \"profiles\".\"profile_id\""
        },
        "delete-profile-policy": {
          "name": "delete-profile-policy",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": [
            "authenticated"
          ],
          "using": "(select auth.uid()) = \"profiles\".\"profile_id\""
        },
        "select-profile-policy": {
          "name": "select-profile-policy",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "(select auth.uid()) = \"profiles\".\"profile_id\""
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    }
  },
  "enums": {
    "public.activity_type_codes": {
      "name": "activity_type_codes",
      "schema": "public",
      "values": [
        "click",
        "view",
        "edit",
        "delete",
        "create",
        "share",
        "export",
        "import"
      ]
    },
    "public.content_type_codes": {
      "name": "content_type_codes",
      "schema": "public",
      "values": [
        "all",
        "bookmark",
        "book",
        "movie",
        "travel"
      ]
    },
    "public.ui_type_codes": {
      "name": "ui_type_codes",
      "schema": "public",
      "values": [
        "default",
        "list",
        "card",
        "grid",
        "timeline",
        "table",
        "calendar",
        "map",
        "chart",
        "gallery",
        "tab"
      ]
    }
  },
  "schemas": {},
  "sequences": {},
  "roles": {},
  "policies": {},
  "views": {},
  "_meta": {
    "columns": {},
    "schemas": {},
    "tables": {}
  }
}