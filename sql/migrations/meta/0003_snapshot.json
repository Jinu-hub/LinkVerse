{
  "id": "1fd4fa76-b932-4fe5-8256-4665f663f838",
  "prevId": "00232a8d-024b-475c-8fee-e9fa658b2fca",
  "version": "7",
  "dialect": "postgresql",
  "tables": {
    "public.payments": {
      "name": "payments",
      "schema": "",
      "columns": {
        "payment_id": {
          "name": "payment_id",
          "type": "bigint",
          "primaryKey": true,
          "notNull": true,
          "identity": {
            "name": "payments_payment_id_seq",
            "increment": "1",
            "minValue": "1",
            "maxValue": "9223372036854775807",
            "startWith": "1",
            "cache": "1",
            "cycle": false,
            "schema": "public",
            "type": "always"
          }
        },
        "payment_key": {
          "name": "payment_key",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "order_id": {
          "name": "order_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "order_name": {
          "name": "order_name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "total_amount": {
          "name": "total_amount",
          "type": "double precision",
          "primaryKey": false,
          "notNull": true
        },
        "metadata": {
          "name": "metadata",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": true
        },
        "raw_data": {
          "name": "raw_data",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": true
        },
        "receipt_url": {
          "name": "receipt_url",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "status": {
          "name": "status",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "approved_at": {
          "name": "approved_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "requested_at": {
          "name": "requested_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "payments_user_id_users_id_fk": {
          "name": "payments_user_id_users_id_fk",
          "tableFrom": "payments",
          "columnsFrom": [
            "user_id"
          ],
          "tableTo": "users",
          "schemaTo": "auth",
          "columnsTo": [
            "id"
          ],
          "onUpdate": "no action",
          "onDelete": "cascade"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "select-payment-policy": {
          "name": "select-payment-policy",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "(select auth.uid()) = \"payments\".\"user_id\""
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.content_type": {
      "name": "content_type",
      "schema": "",
      "columns": {
        "content_type_id": {
          "name": "content_type_id",
          "type": "integer",
          "primaryKey": true,
          "notNull": true,
          "identity": {
            "name": "content_type_content_type_id_seq",
            "increment": "1",
            "minValue": "1",
            "maxValue": "2147483647",
            "startWith": "1",
            "cache": "1",
            "cycle": false,
            "schema": "public",
            "type": "always"
          }
        },
        "content_type_code": {
          "name": "content_type_code",
          "type": "content_type_codes",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "content_type_name": {
          "name": "content_type_name",
          "type": "varchar(100)",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updatedAt": {
          "name": "updatedAt",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "create-content-type-policy": {
          "name": "create-content-type-policy",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "service_role"
          ]
        },
        "edit-content-type-policy": {
          "name": "edit-content-type-policy",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "service_role"
          ]
        },
        "delete-content-type-policy": {
          "name": "delete-content-type-policy",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": [
            "service_role"
          ]
        },
        "read-content-type-policy": {
          "name": "read-content-type-policy",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ]
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.ui_type": {
      "name": "ui_type",
      "schema": "",
      "columns": {
        "ui_type_id": {
          "name": "ui_type_id",
          "type": "integer",
          "primaryKey": true,
          "notNull": true,
          "identity": {
            "name": "ui_type_ui_type_id_seq",
            "increment": "1",
            "minValue": "1",
            "maxValue": "2147483647",
            "startWith": "1",
            "cache": "1",
            "cycle": false,
            "schema": "public",
            "type": "always"
          }
        },
        "ui_type_code": {
          "name": "ui_type_code",
          "type": "ui_type_codes",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "ui_type_name": {
          "name": "ui_type_name",
          "type": "varchar(100)",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updatedAt": {
          "name": "updatedAt",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "ui_type_unique_index": {
          "name": "ui_type_unique_index",
          "columns": [
            {
              "expression": "ui_type_code",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": true,
          "with": {},
          "method": "btree",
          "concurrently": false
        }
      },
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "create-content-type-policy": {
          "name": "create-content-type-policy",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "service_role"
          ]
        },
        "edit-content-type-policy": {
          "name": "edit-content-type-policy",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "service_role"
          ]
        },
        "delete-content-type-policy": {
          "name": "delete-content-type-policy",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": [
            "service_role"
          ]
        },
        "read-content-type-policy": {
          "name": "read-content-type-policy",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ]
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.tag": {
      "name": "tag",
      "schema": "",
      "columns": {
        "tag_id": {
          "name": "tag_id",
          "type": "bigint",
          "primaryKey": true,
          "notNull": true,
          "identity": {
            "name": "tag_tag_id_seq",
            "increment": "1",
            "minValue": "1",
            "maxValue": "9223372036854775807",
            "startWith": "1",
            "cache": "1",
            "cycle": false,
            "schema": "public",
            "type": "always"
          }
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "tag_name": {
          "name": "tag_name",
          "type": "varchar(100)",
          "primaryKey": false,
          "notNull": true
        },
        "usage_count": {
          "name": "usage_count",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "user_tag_unique": {
          "name": "user_tag_unique",
          "columns": [
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "tag_name",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": true,
          "with": {},
          "method": "btree",
          "concurrently": false
        }
      },
      "foreignKeys": {
        "tag_user_id_users_id_fk": {
          "name": "tag_user_id_users_id_fk",
          "tableFrom": "tag",
          "columnsFrom": [
            "user_id"
          ],
          "tableTo": "users",
          "schemaTo": "auth",
          "columnsTo": [
            "id"
          ],
          "onUpdate": "no action",
          "onDelete": "cascade"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "create-tag-policy": {
          "name": "create-tag-policy",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "authenticated"
          ],
          "withCheck": "(select auth.uid()) = \"tag\".\"user_id\""
        },
        "edit-tag-policy": {
          "name": "edit-tag-policy",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "authenticated"
          ],
          "using": "(select auth.uid()) = \"tag\".\"user_id\"",
          "withCheck": "(select auth.uid()) = \"tag\".\"user_id\""
        },
        "delete-tag-policy": {
          "name": "delete-tag-policy",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": [
            "authenticated"
          ],
          "using": "(select auth.uid()) = \"tag\".\"user_id\""
        },
        "read-tag-policy": {
          "name": "read-tag-policy",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "(select auth.uid()) = \"tag\".\"user_id\""
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.profiles": {
      "name": "profiles",
      "schema": "",
      "columns": {
        "profile_id": {
          "name": "profile_id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "avatar_url": {
          "name": "avatar_url",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "marketing_consent": {
          "name": "marketing_consent",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "profiles_profile_id_users_id_fk": {
          "name": "profiles_profile_id_users_id_fk",
          "tableFrom": "profiles",
          "columnsFrom": [
            "profile_id"
          ],
          "tableTo": "users",
          "schemaTo": "auth",
          "columnsTo": [
            "id"
          ],
          "onUpdate": "no action",
          "onDelete": "cascade"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "edit-profile-policy": {
          "name": "edit-profile-policy",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "authenticated"
          ],
          "using": "(select auth.uid()) = \"profiles\".\"profile_id\"",
          "withCheck": "(select auth.uid()) = \"profiles\".\"profile_id\""
        },
        "delete-profile-policy": {
          "name": "delete-profile-policy",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": [
            "authenticated"
          ],
          "using": "(select auth.uid()) = \"profiles\".\"profile_id\""
        },
        "select-profile-policy": {
          "name": "select-profile-policy",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "(select auth.uid()) = \"profiles\".\"profile_id\""
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    }
  },
  "enums": {
    "public.activity_type_codes": {
      "name": "activity_type_codes",
      "schema": "public",
      "values": [
        "click",
        "view",
        "edit",
        "delete",
        "create",
        "share",
        "export",
        "import"
      ]
    },
    "public.content_type_codes": {
      "name": "content_type_codes",
      "schema": "public",
      "values": [
        "all",
        "bookmark",
        "book",
        "movie",
        "travel"
      ]
    },
    "public.ui_type_codes": {
      "name": "ui_type_codes",
      "schema": "public",
      "values": [
        "default",
        "list",
        "card",
        "grid",
        "timeline",
        "table",
        "calendar",
        "map",
        "chart",
        "gallery",
        "tab"
      ]
    }
  },
  "schemas": {},
  "views": {},
  "sequences": {},
  "roles": {},
  "policies": {},
  "_meta": {
    "columns": {},
    "schemas": {},
    "tables": {}
  }
}